###############################################################################
# deployAPI.yml
#
# Description
#   This playbook demonstrates deploying an API to a native, OpenAPI 3 
#   z/OS Connect server. It is not yet complete as it does not cover security
#   roles being added to openapi.yaml before the gradle build. This is planned
#   to be included in my next commit.
# 
# Required files
#   - vars/common.yml
#   Contains common variables related to your installation of z/OS Connect.
#   - /vars/deployAPI.yml
#   Contains variables related to the API project and binaries required to 
#   build it. These should be replaced with values appropriate to your site
#   and your controller node binary locations.
#     
# Authors
#   Caleb Adra
#   cadra@ibm.com
#   September 2025
#   
#   Edward McCarthy
#   edwardmc@au1.ibm.com
#   June 2022
#
# No warranty implied
###############################################################################

---

- hosts: zos_host

  collections:
    - ibm.ibm_zos_core
    - ansible.builtin

  environment: "{{ environment_vars }}" 

  vars_files:
    - vars/common.yml
    - vars/deployAPI.yml

  gather_facts: no
  
  tasks:

    - name: Confirm whether gradle installed on localhost
      delegate_to: localhost
      stat:
        path: "usr/local/gradle/"
      register: confirm_gradleInstall

  ###############################################################################
  # Condition - Start: z/OS Connect gradle installed
  #   For consistent results, this playbook uses the gradle supplied with the
  #   z/OS Connect installation to rebuild API projects.
  #   Copy gradle.zip from z/OS Connect installation and unzip it into PATH of
  #   control node. 
  ###############################################################################

    - name: Fetch gradle from z/OS Connect installation
      fetch:
        src: "{{ installDirectory }}/gradle.zip"
        dest: "/tmp/gradle.zip"
        flat: yes
      when: not confirm_gradleInstall.stat.exists
      
    - name:
      delegate_to: localhost
      unarchive:
        src: "/tmp/gradle.zip"
        dest: "/usr/local/gradle/"
      environment:
        PATH: "/usr/bin"
      when: not confirm_gradleInstall.stat.exists

  ###############################################################################
  # Condition - Stop: z/OS Connect gradle installed
  ###############################################################################

  ###############################################################################
  # Clone API project source from git to a local repo and modify it to allow
  # for deployment into a native z/OS Connect server.
  ###############################################################################  

    - name: Clone project source to local system
      delegate_to: localhost
      git:
        clone: true
        repo: "{{ gitRepo }}"
        dest: "{{ localRepo }}/{{ projectName }}"
        force: true
      environment:
        PATH: "/usr/bin"
    
    - name: Update CICS connection reference for server
      delegate_to: localhost
      replace:
        path: "{{ localRepo }}/{{ projectName }}/src/main/zosAssets/{{ assetName }}/zosAsset.yaml"
        regexp: "{{ designerConn }}"
        replace: "{{ serverConn }}"
      register: update_cicsConnection

    - name: Set context root of API for deployment in server
      delegate_to: localhost
      replace:
        path: "{{ localRepo }}/{{ projectName }}/src/main/api/openapi.yaml"
        after: 'servers:'
        regexp: '- url: /.*$'
        replace: '  - url: /{{ apiName }}'
      register: set_contextRoot

  ###############################################################################
  # Rebuild project with Gradle to create war file with changes incorporated.
  # Confirmation task supplied can be uncommented for debugging.
  ###############################################################################  

    - name: Build the application with Gradle
      delegate_to: localhost
      shell: "gradle clean build"
      args:
        chdir: "{{ localRepo }}/{{ projectName }}"
      environment: 
        environment:
        PATH: "/usr/bin:{{ localGradle }}"
        JAVA_HOME: "{{ localJDK }}"
      register: gradleResult

    # - name: Confirm Gradle build STDOUT
    #   debug: 
    #     msg: gradleResult.stdout_lines

    # - name: Confirm Gradle build STDERR
    #   debug: 
    #     msg: gradleResult.stderr_lines

  ###############################################################################
  # Deploy API war file to server with the desired name. Issue z/OS Connect
  # operator commands to refresh server configuration and detect new (or 
  # updated) applications in the apps directory.
  ############################################################################### 

    - name: Deploy API to server
      copy:
        src: "{{ localRepo }}/{{ projectName }}/build/libs/api.war"
        dest: "{{ serversDirectory }}/{{ zcName }}/apps/{{ apiName }}.war"
        mode: "0775"
    
    - name: Refresh z/OS Connect to install 
      zos_operator:
        cmd: "{{ item }}"
      with_items:
        - "F {{ zcName }},REFRESH,APPS"
        - "F {{ zcName }},REFRESH,CONFIG"
      register: start_server