###############################################################################
# remoteDeployAPI.yml
#
# Description
#   This playbook demonstrates deploying an API to a native, OpenAPI 3 
#   z/OS Connect server. It is not yet complete as it does not cover security
#   roles being added to openapi.yaml before the gradle build. This is planned
#   to be included in my next commit.
# 
# Required files
#   - vars/common.yml
#   Contains common variables related to your installation of z/OS Connect.
#   - /vars/deployAPI.yml
#   Contains variables related to the API project and binaries required to 
#   build it. These should be replaced with values appropriate to your site
#   and your controller node binary locations.
#     
# Authors
#   Caleb Adra
#   cadra@ibm.com
#   September 2025
#   
#   Edward McCarthy
#   edwardmc@au1.ibm.com
#   September 2025
#
# No warranty implied
###############################################################################

---

- hosts: zos_host

  collections:
    - ibm.ibm_zos_core
    - ansible.builtin
    - ansible.community.general

  environment: "{{ environment_vars }}" 

  vars_files:
    - vars/common.yml
    - vars/deployAPI.yml

  gather_facts: no
  
  tasks:

    - name: Confirm whether gradle installed on z/OS
      stat:
        path: "/usr/local/gradle/bin/gradle"
      register: confirm_gradleInstall

  ###############################################################################
  # Condition - Start: z/OS Connect gradle installed
  #   For consistent results, this playbook uses the gradle supplied with the
  #   z/OS Connect installation to rebuild API projects.
  #   Unzip gradle.zip and dependencies.zip from z/OS Connect installation into 
  #   PATH of z/OS LPAR. 
  ###############################################################################

    - name: Unzip gradle.zip from the installation directory
      shell: "jar -xvf {{ installDirectory }}/gradle.zip"
      args:
        chdir: "/usr/local/"
      register: unzip_gradle
      when: not confirm_gradleInstall.stat.exists

    - name: Create symlink for new install of gradle
      shell: "ln -s {{ unzip_gradle.stdout_lines[0] | regex_search('gradle-[\\d\\.]+/') }} gradle"
      args:
        chdir: "/usr/local/"
      register: create_gradleSymlink
      when: not confirm_gradleInstall.stat.exists

    - name: Unzip dependencies.zip from the installation directory
      shell: "jar -xvf {{ installDirectory }}/dependencies.zip"
      args:
        chdir: "/usr/local/gradle/"
      register: unzip_dependencies
      when: not confirm_gradleInstall.stat.exists

    - name: Update gradle binaries to be executable
      shell: |
        chtag -tc ISO8859-1 gradle
        chmod +x gradle
      args:
        chdir: "/usr/local/gradle/bin"
      register: update_gradlePermissions
      when: not confirm_gradleInstall.stat.exists

  # ###############################################################################
  # # Condition - Stop: z/OS Connect gradle installed
  # ###############################################################################

  ###############################################################################
  # Clone API project source from git to a local repo and modify it to allow
  # for deployment into a native z/OS Connect server.
  ###############################################################################  

    - name: Clone project source to local system
      delegate_to: localhost
      git:
        clone: true
        repo: "{{ gitRepo }}"
        dest: "{{ localRepo }}/{{ projectName }}"
        force: true
      environment:
        PATH: "/usr/bin"

  ###############################################################################
  # Rebuild project with Gradle to create war file with changes incorporated.
  # Confirmation task supplied can be uncommented for debugging.
  ###############################################################################  

    - name: Compress directory into tar file
      delegate_to: localhost
      archive:
        path: "{{ localRepo }}/{{ projectName }}/"
        dest: "/tmp/{{ projectName }}.tgz"
        format: zip

    - name: Deploy API project zip to zOS
      copy:
        src: "/tmp/{{ projectName }}.tgz"
        dest: "~/tmp/{{ projectName }}.tgz"
        mode: "0775"
    
    - name: Unzip the project into a directory
      shell: |
        mkdir {{ projectName }}
        cd {{ projectName }}
        jar -xvf ../{{ projectName }}.tgz
      args:
        chdir: "~/tmp/"
      register: untar_project

    - name: Update CICS connection reference for server
      replace:
        path: "~/tmp/{{ projectName }}/src/main/zosAssets/{{ assetName }}/zosAsset.yaml"
        regexp: "{{ designerConn }}"
        replace: "{{ serverConn }}"
      register: update_cicsConnection

    - name: Set context root of API for deployment in server
      replace:
        path: "~/tmp/{{ projectName }}/src/main/api/openapi.yaml"
        after: 'servers:'
        regexp: '- url: /.*$'
        replace: '  - url: /{{ apiName }}'
      register: set_contextRoot

    - name: Update settings.gradle to point to dependecies location on z/OS
      replace:
        path: "{{ item }}"
        after: "maven {"
        regexp: "url .*"
        replace: "url '/usr/local/gradle/gradleLibs'"
      with_items:
        - "~/tmp/{{ projectName }}/settings.gradle"
        - "~/tmp/{{ projectName }}/build.gradle"
      register: update_dependencies

    - name: Build the application with Gradle
      shell: bash /usr/local/gradle/bin/gradle --offline build
      args:
        chdir: "~/tmp/{{ projectName }}/"
      environment:
        _BPXK_AUTOCVT: "ON"
        GRADLE_OPTS: "-Dfile.encoding=UTF-8 -Djava.net.preferIPv4Stack=true -Djava.net.preferIPv6Addresses=false"
      # OPENSHIFT_IP variable used due to Java 17 on z/OS preferring IPv6, even when IPv6 loopback is not enabled. I am setting this to the IPv4 loopback address of the LPAR
        OPENSHIFT_IP: "127.0.0.1"
      register: gradleResult

    - name: Confirm Gradle build STDOUT
      debug: 
        msg: gradleResult.stdout_lines

    - name: Confirm Gradle build STDERR
      debug: 
        msg: gradleResult.stderr_lines

  ###############################################################################
  # Deploy API war file to server with the desired name. Issue z/OS Connect
  # operator commands to refresh server configuration and detect new (or 
  # updated) applications in the apps directory.
  ############################################################################### 

    - name: Deploy API to server
      copy:
        src: "{{ localRepo }}/{{ projectName }}/build/libs/api.war"
        dest: "{{ serversDirectory }}/{{ zcName }}/apps/{{ apiName }}.war"
        mode: "0775"
    
    - name: Insert application xml if not already present
      lineinfile:
        path: "{{ serversDirectory }}/{{ zcName }}/apps.xml"
        insertafter: '<!-- Place application configuration below -->'
        line: '    <webApplication id="{{ apiName }}" location="${server.config.dir}apps/{{ apiName }}.war" name="{{ apiName }}" contextRoot="/{{ apiName }}"/>'
        state: present

    - name: Refresh z/OS Connect to install 
      zos_operator:
        cmd: "{{ item }}"
      with_items:
        - "F {{ zcName }},REFRESH,APPS"
        - "F {{ zcName }},REFRESH,CONFIG"
      register: start_server

    - name: Gather information about running z/OS Connect server
      shell: "jls -o id,name,status | grep AC | grep {{ zcName }}"
      register: gather_serverDetails

    - name: Gather API deployment status from server
      zos_job_output:
        job_id: "{{ gather_serverDetails.stdout.split(' ')[0] }}"
        ddname: "STDOUT"
      register: gather_deploy
      until: "(gather_deploy.jobs[0].ddnames[0].content | select('search', 'Web application available') | select('search', apiName) | length > 0)"
      retries: 2
      delay: 10

    - name: Confirm API deployment recent (last 30 seconds)
      debug:
        msg: "{{ (now() - ((gather_deploy.jobs[0].ddnames[0].content | select('search', 'Web application available') | select('search', apiName ) | last | regex_search('\\[(.*?)\\]')) | to_datetime('[%m/%d/%y, %H:%M:%S:%f %Z]'))).total_seconds() < 30 }}" 